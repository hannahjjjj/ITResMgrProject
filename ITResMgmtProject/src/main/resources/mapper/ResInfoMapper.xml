<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.kcc.itmgr.domain.resinfo.dao.IResInfoRepository">

	<select id="selectAllResInfo"  parameterType="java.util.Map" resultType="kr.co.kcc.itmgr.domain.resinfo.model.ResInfo">
			SELECT 
			    "topUpperResClassName",
			    "upperResClassName",
			    "resClassName",
			    "resName",
			    "installPlaceName",
			    "manufactureCompanyName",
			    "mgmtId",
			    "monitoringYn",
			    "resClassId",
			    "resSerialId"
			FROM (
			    SELECT 
			        "topUpperResClassName",
			        "upperResClassName",
			        "resClassName",
			        "resName",
			        "installPlaceName",
			        "manufactureCompanyName",
			        "mgmtId",
			        "monitoringYn",
			        "resClassId",
			        "resSerialId",
			        ROWNUM AS rnum
			    FROM (
			        SELECT
			            urc_name.res_class_name    "topUpperResClassName",
			            urc.res_class_name        "upperResClassName",
			            rc.res_class_name        "resClassName",
			            r.res_name                "resName",
			            i.install_place_name    "installPlaceName",
			            r.manufacture_company_name    "manufactureCompanyName",
			            r.mgmt_id                "mgmtId",
			            r.monitoring_yn            "monitoringYn",
			            r.res_class_id            "resClassId",
			            r.res_serial_id			"resSerialId"
			        FROM resinfo r
			        LEFT OUTER JOIN installplace i
			            ON i.install_place_sn = r.install_place_sn
			        LEFT OUTER JOIN resclass rc
			            ON rc.res_class_id = r.res_class_id
			        LEFT OUTER JOIN resclass urc
			            ON urc.res_class_id = rc.upper_res_class_id
			        LEFT OUTER JOIN resclass urc_name
			            ON urc_name.res_class_id = urc.upper_res_class_id
		            <where>
					    <if test='resInfo.topUpperResClassName != null and resInfo.topUpperResClassName!="" '>
					        AND urc_name.res_class_name = #{resInfo.topUpperResClassName} 
					    </if>
					    <if test='resInfo.upperResClassName != null and resInfo.upperResClassName!="" '>
					        AND urc.res_class_name = #{resInfo.upperResClassName}
					    </if>
					    <if test='resInfo.resClassName != null and resInfo.resClassName!="" '>
					        AND rc.res_class_name = #{resInfo.resClassName}
					    </if>
					    <if test='resInfo.resName != null and resInfo.resName!="" '>
					        AND r.res_name LIKE '%'|| #{resInfo.resName} ||'%'
					    </if>
					    <if test='resInfo.installPlaceName != null and resInfo.installPlaceName!="" '>
					        AND i.install_place_name LIKE '%'|| #{resInfo.installPlaceName} ||'%'
					    </if>
					    <if test='resInfo.manufactureCompanyName != null and resInfo.manufactureCompanyName!="" '>
					        AND r.manufacture_company_name LIKE '%'|| #{resInfo.manufactureCompanyName} ||'%'
					    </if>
					    <if test='resInfo.mgmtId != null and resInfo.mgmtId!="" '>
					        AND r.mgmt_id LIKE '%'|| #{resInfo.mgmtId} ||'%'
					    </if>    
					    <if test='resInfo.monitoringYn !=null and resInfo.monitoringYn.equals("Y")'>
					        AND r.monitoring_yn = #{resInfo.monitoringYn}
					    </if>
			  		</where>
			    )
			)
			WHERE rnum BETWEEN #{start} AND #{end}
	</select>

	<select id="countOfResInfo" resultType="integer" parameterType="kr.co.kcc.itmgr.domain.resinfo.model.ResInfo">
			SELECT COUNT(*) AS "resName"
			FROM resinfo r
			LEFT OUTER JOIN installplace i
	            ON i.install_place_sn = r.install_place_sn
	        LEFT OUTER JOIN resclass rc
	            ON rc.res_class_id = r.res_class_id 
	        LEFT OUTER JOIN resclass urc
	            ON urc.res_class_id = rc.upper_res_class_id
	        LEFT OUTER JOIN resclass urc_name
	            ON urc_name.res_class_id = urc.upper_res_class_id
		            <where>
					    <if test='topUpperResClassName != null and topUpperResClassName!="" '>
					        AND urc_name.res_class_name = #{topUpperResClassName} 
					    </if>
					    <if test='upperResClassName != null and upperResClassName!="" '>
					        AND urc.res_class_name = #{upperResClassName}
					    </if>
					    <if test='resClassName != null and resClassName!="" '>
					        AND rc.res_class_name = #{resClassName}
					    </if>
					    <if test='resName != null and resName!="" '>
					        AND r.res_name LIKE '%'|| #{resName} ||'%'
					    </if>
					    <if test='installPlaceName != null and installPlaceName!="" '>
					        AND i.install_place_name LIKE '%'|| #{installPlaceName} ||'%'
					    </if>
					    <if test='manufactureCompanyName != null and manufactureCompanyName!="" '>
					        AND r.manufacture_company_name LIKE '%'|| #{manufactureCompanyName} ||'%'
					    </if>
					    <if test='mgmtId != null and mgmtId!="" '>
					        AND r.mgmt_id LIKE '%'|| #{mgmtId} ||'%'
					    </if>    
					    <if test='monitoringYn !=null and monitoringYn.equals("Y")'>
					        AND r.monitoring_yn = #{monitoringYn}
					    </if>
			  		</where>
	</select>

	<select id="searchResInfoByResClass" resultType="kr.co.kcc.itmgr.domain.resinfo.model.ResInfo">

			SELECT
			    LEVEL	"level",
			    res_class_id	"resClassId",
			    res_class_name	"resClassName",
			    upper_res_class_id	"upperResClassId"
			FROM resclass
			START WITH upper_res_class_id IS NULL
			CONNECT BY PRIOR res_class_id = upper_res_class_id
			ORDER SIBLINGS BY res_class_id

		
	</select>
	
	<select id="searchResInfo" parameterType="kr.co.kcc.itmgr.domain.resinfo.model.ResInfo" resultType="kr.co.kcc.itmgr.domain.resinfo.model.ResInfo">
			SELECT 
			    "topUpperResClassName",
			    "upperResClassName",
			    "resClassName",
			    "resName",
			    "installPlaceName",
			    "manufactureCompanyName",
			    "mgmtId",
			    "monitoringYn",
			    "resClassId",
			    "resSerialId"
			FROM (
			    SELECT 
			        "topUpperResClassName",
			        "upperResClassName",
			        "resClassName",
			        "resName",
			        "installPlaceName",
			        "manufactureCompanyName",
			        "mgmtId",
			        "monitoringYn",
			        "resClassId",
			        "resSerialId",
			        ROWNUM AS rnum
			    FROM (
			        SELECT
			            urc_name.res_class_name    "topUpperResClassName",
			            urc.res_class_name        "upperResClassName",
			            rc.res_class_name        "resClassName",
			            r.res_name                "resName",
			            i.install_place_name    "installPlaceName",
			            r.manufacture_company_name    "manufactureCompanyName",
			            r.mgmt_id                "mgmtId",
			            r.monitoring_yn            "monitoringYn",
			            r.res_class_id            "resClassId",
			            r.res_serial_id			"resSerialId"
			        FROM resinfo r
			        LEFT OUTER JOIN installplace i
			            ON i.install_place_sn = r.install_place_sn
			        LEFT OUTER JOIN resclass rc
			            ON rc.res_class_id = r.res_class_id
			        LEFT OUTER JOIN resclass urc
			            ON urc.res_class_id = rc.upper_res_class_id
			        LEFT OUTER JOIN resclass urc_name
			            ON urc_name.res_class_id = urc.upper_res_class_id
			  		<where>
				    <if test='topUpperResClassName != null &amp;&amp; !topUpperResClassName.equals("") '>
				        AND urc_name.res_class_name = #{topUpperResClassName} 
				    </if>
				    <if test='upperResClassName != null &amp;&amp; !upperResClassName.equals("") '>
				        AND urc.res_class_name = #{upperResClassName}
				    </if>
				    <if test='resClassName != null &amp;&amp; !resClassName.equals("") '>
				        AND rc.res_class_name = #{resClassName}
				    </if>
				    <if test='resName != null &amp;&amp; !resName.equals("") '>
				        AND r.res_name LIKE '%'|| #{resName} ||'%'
				    </if>
				    <if test='installPlaceName != null &amp;&amp; !installPlaceName.equals("") '>
				        AND i.install_place_name LIKE '%'|| #{installPlaceName} ||'%'
				    </if>
				    <if test='manufactureCompanyName != null &amp;&amp; !manufactureCompanyName.equals("") '>
				        AND r.manufacture_company_name LIKE '%'|| #{manufactureCompanyName} ||'%'
				    </if>
				    <if test='mgmtId != null &amp;&amp; !mgmtId.equals("") '>
				        AND r.mgmt_id LIKE '%'|| #{mgmtId} ||'%'
				    </if>    
				    <if test='monitoringYn.equals("Y")'>
				        AND r.monitoring_yn = #{monitoringYn}
				    </if>
			  		</where>
			    )
			)	
			  WHERE rnum BETWEEN #{start} AND #{end}
	</select>
	
	<insert id="insertResInfo" parameterType="kr.co.kcc.itmgr.domain.resinfo.model.ResInfo">
		<![CDATA[
			INSERT INTO 
				RESINFO
					(res_serial_id, res_class_id, res_name, res_sn, mgmt_id, res_status_code, manufacture_company_name,
					model_name, mgmt_dept_name, manager_name, introduction_date, introduction_price, purchase_company_name, use_yn,
					monitoring_yn, rack_info, expiration_date, add_info, create_date, creater_id, update_date, updater_id, install_place_sn)
				VALUES
					(#{resSerialId}, #{resClassId}, #{resName}, #{resSn}, #{mgmtId}, #{resStatusCode}, #{manufactureCompanyName},
					#{modelName}, #{mgmtDeptName}, #{managerName}, #{introductionDate}, #{introductionPrice}, #{purchaseCompanyName}, #{useYn},
					#{monitoringYn}, #{rackInfo}, #{expirationDate}, #{addInfo}, SYSDATE, 'wh467925', SYSDATE, 'wh467925', #{installPlaceSn})	
		]]>
	</insert>
	
	<update id="updateResInfo" parameterType="kr.co.kcc.itmgr.domain.resinfo.model.ResInfo">
		<![CDATA[
			UPDATE RESINFO
			SET
			    res_class_id = #{resClassId},
			    res_name = #{resName},
			    res_sn = #{resSn},
			    install_place_sn = #{installPlaceSn},
			    mgmt_id = #{mgmtId},
			    res_status_code = #{resStatusCode},
			    manufacture_company_name = #{manufactureCompanyName},
			    model_name = #{modelName},
			    mgmt_dept_name = #{mgmtDeptName},
			    manager_name = #{managerName},
			    introduction_date = #{introductionDate},
			    introduction_price = #{introductionPrice},
			    purchase_company_name = #{purchaseCompanyName},
			    use_yn = #{useYn},
			    monitoring_yn = #{monitoringYn},
			    rack_info = #{rackInfo},
			    expiration_date = #{expirationDate},
			    add_info = #{addInfo},
			    update_date = SYSDATE
			WHERE res_serial_id = #{resSerialId}
		]]>
	</update>
	
	<update id="updateAddItemValueInResInfo" parameterType="kr.co.kcc.itmgr.domain.resinfo.model.ResInfo">
		<![CDATA[
			UPDATE RESINFODETAIL
			SET
				res_detail_value = #{resDetailValue}
			WHERE res_serial_id = #{resSerialId}
		]]>
	</update>
	
	<select id="selectResStatusCode" parameterType="String" resultType="kr.co.kcc.itmgr.domain.commoncode.model.CommonCodeDetail">
		<![CDATA[
			SELECT 
				detail_code	"resStatusCode",
				detail_code_name	"detailCodeName"
			FROM COMMONCODEDETAIL
			WHERE code_group_id = #{codeGroupId}			
		]]>
	</select>
	
	<select id="selectResInstallPlace" resultType="kr.co.kcc.itmgr.domain.installplace.model.InstallPlace">
		<![CDATA[	
			SELECT
				install_place_sn	"installPlaceSn",
				install_place_name	"installPlaceName",
				install_place_postno	"installPlacePostno",
				install_place_address	"installPlaceAddress"
			FROM (
				SELECT install_place_sn, install_place_name, install_place_postno, install_place_address, rownum AS rnum
				FROM (
					SELECT * FROM INSTALLPLACE
					)
				)
			WHERE rnum BETWEEN #{start} AND #{end}
		]]>
	</select>
	
	
	<select id="selectAllResClass" resultType="kr.co.kcc.itmgr.domain.resclass.model.ResClass" >
	<![CDATA[
		SELECT
		    c.res_class_name AS "resClassName",
		    LISTAGG(r.res_class_name, ',') WITHIN GROUP (ORDER BY r.res_class_name DESC) AS "resClassName2",
		    TO_CHAR(r.lv) AS "level",
		    (SELECT aa.res_class_name FROM resclass aa
                   WHERE aa.res_class_id=c.upper_res_class_id) AS "upperResClassName",
		    r.res_class_id AS "resClassId"
		FROM (
		    SELECT
		        upper_res_class_id,
		        res_class_name,
		        res_class_id,
		        LEVEL AS lv
		    FROM
		        RESCLASS
		    WHERE
		        use_yn = 'Y'
		    START WITH
		        upper_res_class_id IS NULL
		    CONNECT BY
		        PRIOR res_class_id = upper_res_class_id
		) r
		JOIN
		    RESCLASS c ON r.upper_res_class_id = c.res_class_id
		GROUP BY
		    r.lv, c.res_class_name, c.upper_res_class_id, r.res_class_id
		ORDER BY
		    r.lv, c.res_class_name DESC
	]]>
	</select>
	
	<select id="selectResInfoDetail" parameterType="String" resultType="kr.co.kcc.itmgr.domain.resinfo.model.ResInfo">
		<![CDATA[
			SELECT
			    r.res_serial_id   "resSerialId",
			    r.res_class_id	"resClassId",
			    rc.res_class_name   "resClassName",
			    r.install_place_sn	"installPlaceSn",
			    r.res_name  "resName",
			    r.res_sn    "resSn",
			    r.mgmt_id   "mgmtId",
			    c.detail_code_name   "resStatusCode",
			    r.manufacture_company_name  "manufactureCompanyName",
			    r.model_name    "modelName",
			    r.mgmt_dept_name    "mgmtDeptName",
			    r.manager_name  "managerName",
			    r.introduction_date "introductionDate",
			    r.introduction_price    "introductionPrice",
			    r.purchase_company_name "purchaseCompanyName",
			    r.use_yn    "useYn",
			    r.monitoring_yn "monitoringYn",
			    r.rack_info "rackInfo",
			    r.expiration_date   "expirationDate",
			    r.add_info  "addInfo",
                i.install_place_name "installPlaceName"
			    FROM RESINFO r
			    LEFT OUTER JOIN RESCLASS rc ON r.res_class_id = rc.res_class_id
			    LEFT OUTER JOIN COMMONCODEDETAIL c ON r.res_status_code =  c.detail_code
                LEFT OUTER JOIN INSTALLPLACE i ON r.install_place_sn = i.install_place_sn
			    WHERE r.res_name = #{resName}
		]]>
	</select>
	
	<!-- 자원에 매핑된 부가항목리스트 -->
	<select id="selectMappingAddItem" parameterType="String" resultType="kr.co.kcc.itmgr.domain.resinfo.model.ResInfo">
		<![CDATA[
			SELECT
			    m.res_class_id AS "resClassId",
			    m.add_item_sn AS "addItemSn",
			    a.add_item_name AS "addItemName"
			FROM
			    resclassasideinfomapping m
			JOIN
			    additem a ON m.add_item_sn = a.add_item_sn
			WHERE
			    m.res_class_id = #{resClassId}
		]]>
	</select>
	
	<insert id="insertAddItemValueInResInfo" parameterType="java.util.HashMap">
	    INSERT INTO resinfodetail(
	        res_serial_id, 
	        add_item_sn, 
	        res_detail_value, 
	        create_date, 
	        creater_id
	    ) values (#{resSerialId}, #{addItemSn}, #{resDetailValue}, SYSDATE, 'wh467925')
	</insert>
	
	<select id="selectAllIpInfoList" resultType="kr.co.kcc.itmgr.domain.ipinfo.model.IpInfo">
		<![CDATA[
			SELECT
			    "ip",
			    "ipSn",
                "ipTypeCode",
                "detailCodeName"
		    FROM (
		    SELECT		"ip",
		    			"ipSn",
                        "ipTypeCode",
                        "detailCodeName",
		    			ROWNUM AS rnum
		    			FROM (
		    				SELECT
							    i.ip    "ip",
							    i.ip_sn "ipSn",
                                i.ip_type_code "ipTypeCode",
                                c.detail_code_name "detailCodeName"
		    				FROM ipinfo i
                            JOIN commoncodedetail c ON c.detail_code = i.ip_type_code
							)
					)
				WHERE rnum BETWEEN #{start} AND #{end}
		]]>
	</select>
	
	<select id="CountOfIpList" resultType="Integer">
		<![CDATA[
			SELECT COUNT(*) AS "ip"
			FROM ipinfo
		]]>
	</select>

	<select id="selectIpInResInfo" resultType="kr.co.kcc.itmgr.domain.resinfo.model.ResInfo">
		<![CDATA[
			SELECT 
				i.ip "ip",
				m.ip_sn "ipSn",
				m.ip_type_code "ipTypeCode",
				c.detail_code_name "detailCodeName"
			FROM resipmapping m 
			JOIN commoncodedetail c ON c.detail_code = m.ip_type_code
			JOIN ipinfo i ON i.ip_sn = m.ip_sn
			WHERE m.res_serial_id = #{resSerialId}
		]]>
	</select>
	
	<insert id="insertIpInResInfo" parameterType="java.util.HashMap">
	    INSERT INTO resipmapping(
	        res_serial_id, 
	        ip_sn, 
	        ip_type_code, 
	        create_date, 
	        creater_id
	    ) values (#{resSerialId,jdbcType=VARCHAR}, #{ipSn,jdbcType=INTEGER}, #{ipTypeCode,jdbcType=VARCHAR}, SYSDATE, 'wh467925')
	</insert>
	
	<insert id="updateIpInResInfo" parameterType="java.util.HashMap">
	    INSERT INTO resipmapping(
	        res_serial_id, 
	        ip_sn, 
	        ip_type_code, 
	        create_date, 
	        creater_id
	    ) values (#{resSerialId,jdbcType=VARCHAR}, #{ipSn,jdbcType=INTEGER}, #{ipTypeCode,jdbcType=VARCHAR}, SYSDATE, 'wh467925')
	</insert>
	
	<delete id="deleteIpInResInfo" parameterType="Integer">
		DELETE
			FROM resipmapping
		WHERE
			ip_sn = #{ipSn}
	</delete>
	
	<delete id="deleteAddItemValueInResInfo" parameterType="String">
			DELETE 
				FROM resinfodetail
			WHERE
				res_serial_id = #{resSerialId}
	</delete>
	
	<select id="selectAddItemValueInResInfo" parameterType="String" resultType="kr.co.kcc.itmgr.domain.resinfo.model.ResInfo">
		<![CDATA[
			SELECT 
				rid.res_detail_value	"resDetailValue",
				ai.add_item_name	"addItemName"
			FROM resinfo r
			INNER JOIN resinfodetail rid ON r.res_serial_id=rid.res_serial_id
			INNER JOIN additem ai ON ai.add_item_sn=rid.add_item_sn
			INNER JOIN resclassasideinfomapping ra ON ai.add_item_sn = ra.add_item_sn AND r.res_class_id=ra.res_class_id
			WHERE r.res_serial_id = #{resSerialId}
		]]>
	</select>
	
	<select id="selectIpMappingInResInfo" parameterType="String" resultType="kr.co.kcc.itmgr.domain.resinfo.model.ResInfo">
		<![CDATA[
			SELECT 
                i.ip_sn "ipSn",
				i.ip    "ip",
				c.detail_code_name	"detailCodeName"
			FROM resinfo r
			INNER JOIN resipmapping rm ON r.res_serial_id=rm.res_serial_id
			INNER JOIN ipinfo i ON i.ip_sn = rm.ip_sn
			INNER JOIN commoncodedetail c ON c.detail_code = i.ip_type_code
			WHERE r.res_serial_id = #{resSerialId}
		]]>
	</select>
	
	<select id="CountOfAddItemValueInResInfo" parameterType="String" resultType="Integer">
			SELECT 
				COALESCE(COUNT(*), 0)
			FROM resinfodetail
			WHERE res_serial_id = #{resSerialId}
	</select>
	
	<select id="countOfInstallPlace" resultType="Integer">
		<![CDATA[
			SELECT COUNT(*) AS "installPlaceSn"
			FROM installplace
		]]>
	</select>
	
	<select id="existingIpSnList" parameterType="String" resultType="Integer">
		<![CDATA[
			SELECT ip_sn "ipSn"
			FROM resipmapping
			WHERE res_serial_id = #{resSerialId}
		]]>
	</select>
</mapper>