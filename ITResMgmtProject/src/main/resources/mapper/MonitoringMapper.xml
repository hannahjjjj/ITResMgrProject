<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.kcc.itmgr.domain.home.dao.IMonitoringRepository">
	<sql id="ip">
		AND ip.ip is not null
	</sql>
	<sql id="resInfo">
		SELECT
		    r.res_serial_id      AS "resSerialId",
		    r.res_name           AS "resName",
		    r.mgmt_id            AS "mgmtId",
		    r.res_status_code    AS "resStatusCode",
		    r.introduction_date  AS "introductionDate",
		    r.use_yn             AS "resUseYn",
		    r.res_class_id       AS "resClassId",
		    r.res_class_name     AS "resClassName",
		    r.res_class_path     AS "resClassPath",
		    r.install_place_sn   AS "installPlaceSn",
		    r.install_place_name AS "installPlaceName",
		    r."installPlaceFullAddress",
		    r.ip                 AS "ip",
		    r.ip_desc            AS "ipDesc",
		    rn
		FROM
		    (
		        SELECT
		            r.res_serial_id,
		            r.res_name,
		            r.mgmt_id,
		            r.res_status_code,
		            r.introduction_date,
		            r.use_yn,
		            rc.res_class_id,
		            rc.res_class_name,
		            rc.res_class_path,
		            i.install_place_sn,
		            i.install_place_name,
		            concat(i.install_place_address,
		                   concat(' ', i.install_place_detail_address)) AS "installPlaceFullAddress",
		            ip.ip,
		            ip.ip_desc,
		            ROW_NUMBER()
		            OVER(
		                ORDER BY
		                    r.res_serial_id
		            )                                                   AS rn
		        FROM
		            resinfo      r
		            LEFT JOIN installplace i ON r.install_place_sn = i.install_place_sn
		            LEFT JOIN resclass     rc ON r.res_class_id = rc.res_class_id
		            LEFT JOIN resipmapping rim ON r.res_serial_id = rim.res_serial_id
		            LEFT JOIN ipinfo       ip ON rim.ip_sn = ip.ip_sn
		            LEFT JOIN (
		                SELECT
		                    level,
		                    res_class_id,
		                    res_class_name,
		                    substr(sys_connect_by_path(res_class_name, '>'),
		                           2) AS "RES_CLASS_PATH"
		                FROM
		                    resclass
		                WHERE
		                    level = 3
		                START WITH
		                    upper_res_class_id IS NULL
		                CONNECT BY
		                    PRIOR res_class_id = upper_res_class_id
		            )            rc ON r.res_class_id = rc.res_class_id
		        WHERE
		                r.monitoring_yn = 'Y'
		            AND r.use_yn = 'Y'
		            AND r.res_class_id LIKE '%HW%'
		            AND ip.ip IS NOT NULL
		    ) r
	</sql>
	
	<select id="selectAllResourceInformation">
		<include refid="resInfo"></include>
		<where>
			rn BETWEEN #{start} AND #{end}
		</where>
	</select>
	
	<select id="selectResClassInformationByLevel" parameterType="int">
		<![CDATA[
			SELECT
			    level,
			    res_class_id as "resClassId",
			    upper_res_class_id as "upperResClassId",
			    res_class_name as "resClassName"
			FROM
			    resclass 
			WHERE
			    level = #{level} AND res_class_id LIKE 'HW%'
			START WITH
			    upper_res_class_id IS NULL
			CONNECT BY
			    PRIOR res_class_id = upper_res_class_id
		]]>
	</select>
	
	<select id="selectResourceInformationBySearchCondition" 
		parameterType="kr.co.kcc.itmgr.domain.home.model.SearchCondition" resultType="kr.co.kcc.itmgr.domain.home.model.Monitoring">
			SELECT
			    rn,
			    r.res_serial_id      AS "resSerialId",
			    r.res_name           AS "resName",
			    r.mgmt_id            AS "mgmtId",
			    r.res_status_code    AS "resStatusCode",
			    r.introduction_date  AS "introductionDate",
			    r.use_yn             AS "resUseYn",
			    r.res_class_id       AS "resClassId",
			    r.res_class_name     AS "resClassName",
			    r.res_class_path     AS "resClassPath",
			    r.install_place_sn   AS "installPlaceSn",
			    r.install_place_name AS "installPlaceName",
			    r."installPlaceFullAddress",
			    r.ip                 AS "ip",
			    r.ip_desc            AS "ipDesc"
			FROM (SELECT
			    ROW_NUMBER()
		            OVER(
		                ORDER BY
		                    r.res_serial_id
		            )                                          AS rn,
			    r.res_serial_id                                     ,
			    r.res_name                                          ,
			    r.mgmt_id                                           ,
			    r.res_status_code                                   ,
			    r.introduction_date                                 ,
			    r.use_yn                                            ,
			    rc.res_class_id                                     ,
			    rc.res_class_name                                   ,
			    rc.res_class_path                                   ,
			    i.install_place_sn                                  ,
			    i.install_place_name                                ,
			    concat(i.install_place_address,
			           concat(' ', i.install_place_detail_address)) AS "installPlaceFullAddress",
			    ip.ip                                               ,
			    ip.ip_desc                                          
						FROM (
						    SELECT
						        LEVEL,
						        res_class_id,
						        res_class_name,
						        SUBSTR(SYS_CONNECT_BY_PATH(res_class_name, '>'), 2) AS "RES_CLASS_PATH"
						    FROM
						        resclass
						    WHERE
						        LEVEL = 3
						        <if test='!bottomResClass.equals("A")'>
						            AND res_class_id = #{bottomResClass}
						        </if>
						        <if test='!midResClass.equals("A")'>
						            AND upper_res_class_id = #{midResClass}
						        </if>
						    START WITH
						        upper_res_class_id IS NULL
						    CONNECT BY
						        PRIOR res_class_id = upper_res_class_id
						) rc
						LEFT JOIN resinfo r ON rc.res_class_id = r.res_class_id
						LEFT JOIN installplace i ON r.install_place_sn = i.install_place_sn
						LEFT JOIN resclass rc ON r.res_class_id = rc.res_class_id
						LEFT JOIN resipmapping rim ON r.res_serial_id = rim.res_serial_id
						LEFT JOIN ipinfo ip ON rim.ip_sn = ip.ip_sn
						WHERE
						    r.use_yn = 'Y' AND r.res_class_id LIKE '%HW%'
						    <include refid="ip"></include>
						    <if test='monitoringYn.equals("Y")'>
						        AND r.monitoring_yn = #{monitoringYn}
						    </if>
						    <if test='resName != null or resName = "" or resName.length() gte 1'>
						        AND r.res_name LIKE '%' || #{resName} || '%'
						    </if>
						    <if test='midResClass.equals("A") or bottomResClass.equals("A")'>
						        AND r.res_serial_id IS NOT null </if> ) r 
						<where>
							rn between #{start} and #{end}
						</where>
	</select>
	
	<select id="selectResCount">
		SELECT
		    COUNT(*)
		FROM
		    resinfo      r
		    LEFT JOIN installplace i ON r.install_place_sn = i.install_place_sn
		    LEFT JOIN resclass     rc ON r.res_class_id = rc.res_class_id
		    LEFT JOIN resipmapping rim ON r.res_serial_id = rim.res_serial_id
		    LEFT JOIN ipinfo       ip ON rim.ip_sn = ip.ip_sn
		    LEFT JOIN (
		        SELECT
		            level,
		            res_class_id,
		            res_class_name,
		            substr(sys_connect_by_path(res_class_name, '>'),
		                   2) AS "RES_CLASS_PATH"
		        FROM
		            resclass
		        WHERE
		            level = 3
		        START WITH
		            upper_res_class_id IS NULL
		        CONNECT BY
		            PRIOR res_class_id = upper_res_class_id
		    )            rc ON r.res_class_id = rc.res_class_id
		WHERE
		        r.monitoring_yn = 'Y'
		    AND r.use_yn = 'Y'
		    AND r.res_class_id LIKE '%HW%'
		    AND ip.ip IS NOT NULL
	</select>
	
	<select id="selectResCountBySearch" parameterType="kr.co.kcc.itmgr.domain.home.model.SearchCondition">
		SELECT
			    COUNT(*)                                        
						FROM ( SELECT
                                                        level,
                                                        res_class_id,
                                                        res_class_name,
                                                        substr(sys_connect_by_path(res_class_name, '>'),
                                                               2) AS "RES_CLASS_PATH"
                                                    FROM
                                                        resclass
                          WHERE
                              level = 3
						        <if test='!bottomResClass.equals("A")'>
						            AND res_class_id = #{bottomResClass}
						        </if>
						        <if test='!midResClass.equals("A")'>
						            AND upper_res_class_id = #{midResClass}
						        </if>
						    START WITH
						        upper_res_class_id IS NULL
						    CONNECT BY
						        PRIOR res_class_id = upper_res_class_id
						) rc
						LEFT JOIN resinfo r ON rc.res_class_id = r.res_class_id
						LEFT JOIN installplace i ON r.install_place_sn = i.install_place_sn
						LEFT JOIN resclass rc ON r.res_class_id = rc.res_class_id
						LEFT JOIN resipmapping rim ON r.res_serial_id = rim.res_serial_id
						LEFT JOIN ipinfo ip ON rim.ip_sn = ip.ip_sn
						WHERE
						    r.use_yn = 'Y' AND r.res_class_id LIKE '%HW%'
						    <include refid="ip"></include>
						    <if test='monitoringYn.equals("Y")'>
						        AND r.monitoring_yn = #{monitoringYn}
						    </if>
						    <if test='resName != null or resName = "" or resName.length() gte 1'>
						        AND r.res_name LIKE '%' || #{resName} || '%'
						    </if>
						    <if test='midResClass.equals("A") or bottomResClass.equals("A")'>
						        AND r.res_serial_id IS NOT null </if>  
	</select>
</mapper>